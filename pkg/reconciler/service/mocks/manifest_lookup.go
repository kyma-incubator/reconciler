// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	chart "github.com/kyma-incubator/reconciler/pkg/reconciler/chart"
	mock "github.com/stretchr/testify/mock"

	reconciler "github.com/kyma-incubator/reconciler/pkg/reconciler"

	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// ManifestLookup is an autogenerated mock type for the ManifestLookup type
type ManifestLookup struct {
	mock.Mock
}

// Lookup provides a mock function with given fields: _a0, _a1, _a2
func (_m *ManifestLookup) Lookup(_a0 func(*unstructured.Unstructured) bool, _a1 chart.Provider, _a2 *reconciler.Task) (*unstructured.Unstructured, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *unstructured.Unstructured
	if rf, ok := ret.Get(0).(func(func(*unstructured.Unstructured) bool, chart.Provider, *reconciler.Task) *unstructured.Unstructured); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*unstructured.Unstructured)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(func(*unstructured.Unstructured) bool, chart.Provider, *reconciler.Task) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
