// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	config "github.com/kyma-incubator/reconciler/pkg/reconciler/instances/istio/reset/config"
	data "github.com/kyma-incubator/reconciler/pkg/reconciler/instances/istio/reset/data"

	mock "github.com/stretchr/testify/mock"
)

// IstioProxyReset is an autogenerated mock type for the IstioProxyReset type
type IstioProxyReset struct {
	mock.Mock
}

// GetGatherer provides a mock function with given fields:
func (_m *IstioProxyReset) GetGatherer() data.Gatherer {
	ret := _m.Called()

	var r0 data.Gatherer
	if rf, ok := ret.Get(0).(func() data.Gatherer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(data.Gatherer)
		}
	}

	return r0
}

// Run provides a mock function with given fields: cfg
func (_m *IstioProxyReset) Run(cfg config.IstioProxyConfig) error {
	ret := _m.Called(cfg)

	var r0 error
	if rf, ok := ret.Get(0).(func(config.IstioProxyConfig) error); ok {
		r0 = rf(cfg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIstioProxyReset interface {
	mock.TestingT
	Cleanup(func())
}

// NewIstioProxyReset creates a new instance of IstioProxyReset. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIstioProxyReset(t mockConstructorTestingTNewIstioProxyReset) *IstioProxyReset {
	mock := &IstioProxyReset{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
