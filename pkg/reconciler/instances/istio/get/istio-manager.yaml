apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: istio
    control-plane: controller-manager
  name: kyma-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
  name: istios.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Istio
    listKind: IstioList
    plural: istios
    singular: istio
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Contains Istio CR specification and current status.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired specification for installing or updating
              Istio.
            properties:
              components:
                properties:
                  cni:
                    description: Cni defines component configuration for Istio CNI
                      DaemonSet
                    properties:
                      k8s:
                        description: CniK8sConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  ingressGateway:
                    description: IngressGateway defines component configurations for
                      Istio Ingress Gateway
                    properties:
                      k8s:
                        description: KubernetesResourcesConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          hpaSpec:
                            description: HPASpec defines configuration for HorizontalPodAutoscaler
                            properties:
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: Strategy defines rolling update strategy
                            properties:
                              rollingUpdate:
                                description: 'RollingUpdate defines configuration
                                  for rolling updates: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment'
                                properties:
                                  maxSurge:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                type: object
                            required:
                            - rollingUpdate
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  pilot:
                    description: Pilot defines component configuration for Istiod
                    properties:
                      k8s:
                        description: KubernetesResourcesConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          hpaSpec:
                            description: HPASpec defines configuration for HorizontalPodAutoscaler
                            properties:
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: Strategy defines rolling update strategy
                            properties:
                              rollingUpdate:
                                description: 'RollingUpdate defines configuration
                                  for rolling updates: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment'
                                properties:
                                  maxSurge:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                type: object
                            required:
                            - rollingUpdate
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  proxy:
                    description: Proxy defines component configuration for Istio proxy
                      sidecar
                    properties:
                      k8s:
                        description: ProxyK8sConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                type: object
              config:
                description: Config is the configuration for the Istio installation.
                properties:
                  numTrustedProxies:
                    description: Defines the number of trusted proxies deployed in
                      front of the Istio gateway proxy.
                    type: integer
                type: object
            type: object
          status:
            description: IstioStatus defines the observed state of IstioCR.
            properties:
              conditions:
                description: Conditions associated with IstioStatus.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              description:
                description: Description of Istio status
                type: string
              state:
                description: State signifies current state of CustomObject. Value
                  can be one of ("Ready", "Processing", "Error", "Deleting", "Warning").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                - Warning
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Contains Istio CR specification and current status.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired specification for installing or updating
              Istio.
            properties:
              components:
                properties:
                  cni:
                    description: Cni defines component configuration for Istio CNI
                      DaemonSet
                    properties:
                      k8s:
                        description: CniK8sConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  ingressGateway:
                    description: IngressGateway defines component configurations for
                      Istio Ingress Gateway
                    properties:
                      k8s:
                        description: KubernetesResourcesConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          hpaSpec:
                            description: HPASpec defines configuration for HorizontalPodAutoscaler
                            properties:
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: Strategy defines rolling update strategy
                            properties:
                              rollingUpdate:
                                description: 'RollingUpdate defines configuration
                                  for rolling updates: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment'
                                properties:
                                  maxSurge:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                type: object
                            required:
                            - rollingUpdate
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  pilot:
                    description: Pilot defines component configuration for Istiod
                    properties:
                      k8s:
                        description: KubernetesResourcesConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          hpaSpec:
                            description: HPASpec defines configuration for HorizontalPodAutoscaler
                            properties:
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                          strategy:
                            description: Strategy defines rolling update strategy
                            properties:
                              rollingUpdate:
                                description: 'RollingUpdate defines configuration
                                  for rolling updates: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment'
                                properties:
                                  maxSurge:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    x-kubernetes-int-or-string: true
                                type: object
                            required:
                            - rollingUpdate
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                  proxy:
                    description: Proxy defines component configuration for Istio proxy
                      sidecar
                    properties:
                      k8s:
                        description: ProxyK8sConfig is a subset of https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#KubernetesResourcesSpec
                        properties:
                          resources:
                            description: 'Resources define Kubernetes resources configuration:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    type: string
                                  memory:
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - k8s
                    type: object
                type: object
              config:
                description: Config is the configuration for the Istio installation.
                properties:
                  numTrustedProxies:
                    description: Defines the number of trusted proxies deployed in
                      front of the Istio gateway proxy.
                    type: integer
                type: object
            type: object
          status:
            description: IstioStatus defines the observed state of IstioCR.
            properties:
              conditions:
                description: Conditions associated with IstioStatus.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              description:
                description: Description of Istio status
                type: string
              state:
                description: State signifies current state of CustomObject. Value
                  can be one of ("Ready", "Processing", "Error", "Deleting", "Warning").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                - Warning
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: istio
  name: istio-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: istio
    app.kubernets.io/managed-by: kustomize
  name: istio-leader-election-role
  namespace: kyma-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
  name: istio-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operator.kyma-project.io
  resources:
  - istios
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kyma-project.io
  resources:
  - istios/finalizers
  verbs:
  - update
- apiGroups:
  - operator.kyma-project.io
  resources:
  - istios/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - authentication.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - config.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - install.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - security.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - telemetry.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions.apiextensions.k8s.io
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apps
  - extensions
  resources:
  - daemonsets
  - deployments
  - deployments/finalizers
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - pods
  - pods/proxy
  - pods/portforward
  - persistentvolumeclaims
  - secrets
  - services
  - serviceaccounts
  - resourcequotas
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: istio
  name: istio-leader-election-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-leader-election-role
subjects:
- kind: ServiceAccount
  name: istio-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: istio
  name: istio-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-manager-role
subjects:
- kind: ServiceAccount
  name: istio-controller-manager
  namespace: kyma-system
---
apiVersion: v1
data:
  details: |-
    header:
    - name: Ready
      source: status.state
      widget: Badge
      highlights:
        positive:
          - 'Ready'
    body:
    - widget: Tabs
      children:
      - name: General
        children:
        - widget: Panel
          name: Configuration
          children:
            - source: spec.config.numTrustedProxies
              name: config.numTrustedProxies
              visibility: '$exists($value)'
      - name: Components
        children:
        - widget: Panel
          name: Pilot
          children:
          - source: spec.components.pilot.k8s.hpaSpec.minReplicas
            name: k8s.hpaSpec.minReplicas
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.hpaSpec.maxReplicas
            name: k8s.hpaSpec.maxReplicas
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.strategy.rollingUpdate.maxSurge
            name: k8s.strategy.rollingUpdate.maxSurge
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.strategy.rollingUpdate.maxUnavailable
            name: k8s.strategy.rollingUpdate.maxUnavailable
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.resources.limits.cpu
            name: k8s.resources.limits.cpu
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.resources.limits.memory
            name: k8s.resources.limits.memory
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.resources.requests.cpu
            name: k8s.resources.requests.cpu
            visibility: '$exists($value)'
          - source: spec.components.pilot.k8s.resources.requests.memory
            name: k8s.resources.requests.memory
            visibility: '$exists($value)'
        - widget: Panel
          name: Ingress Gateway
          children:
          - source: spec.components.ingressGateway.k8s.hpaSpec.minReplicas
            name: k8s.hpaSpec.minReplicas
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.hpaSpec.maxReplicas
            name: k8s.hpaSpec.maxReplicas
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.strategy.rollingUpdate.maxSurge
            name: k8s.strategy.rollingUpdate.maxSurge
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.strategy.rollingUpdate.maxUnavailable
            name: k8s.strategy.rollingUpdate.maxUnavailable
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.resources.limits.cpu
            name: k8s.resources.limits.cpu
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.resources.limits.memory
            name: k8s.resources.limits.memory
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.resources.requests.cpu
            name: k8s.resources.requests.cpu
            visibility: '$exists($value)'
          - source: spec.components.ingressGateway.k8s.resources.requests.memory
            name: k8s.resources.requests.memory
            visibility: '$exists($value)'
        - widget: Panel
          name: CNI
          children:
            - source: spec.components.cni.k8s.resources.limits.cpu
              name: k8s.resources.limits.cpu
              visibility: '$exists($value)'
            - source: spec.components.cni.k8s.resources.limits.memory
              name: k8s.resources.limits.memory
              visibility: '$exists($value)'
            - source: spec.components.cni.k8s.resources.requests.cpu
              name: k8s.resources.requests.cpu
              visibility: '$exists($value)'
            - source: spec.components.cni.k8s.resources.requests.memory
              name: k8s.resources.requests.memory
              visibility: '$exists($value)'
            - source: spec.components.cni.k8s.affinity
              name: k8s.affinity
              widget: CodeViewer
              description: "Kubernetes documentation for {{[Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)}}"
              language: "'yaml'"
              visibility: '$exists($value)'
        - widget: Panel
          name: Proxy
          children:
          - source: spec.components.proxy.k8s.resources.limits.cpu
            name: k8s.resources.limits.cpu
            visibility: '$exists($value)'
          - source: spec.components.proxy.k8s.resources.limits.memory
            name: k8s.resources.limits.memory
            visibility: '$exists($value)'
          - source: spec.components.proxy.k8s.resources.requests.cpu
            name: k8s.resources.requests.cpu
            visibility: '$exists($value)'
          - source: spec.components.proxy.k8s.resources.requests.memory
            name: k8s.resources.requests.memory
            visibility: '$exists($value)'
      - name: Reconciliation
        children:
        - widget: EventList
          filter: '$matchEvents($$, $root.kind, $root.metadata.name)'
          name: Events
          defaultType: information
  form: |-
    - path: spec.config
      simple: true
      name: General
      widget: FormGroup
      defaultExpanded: true
      children:
      - path: numTrustedProxies
        simple: true
        name: config.numTrustedProxies
        inputInfo: inputInfo.config.numTrustedProxies
        value:
          type: number
    - path: spec.components
      name: Components
      widget: FormGroup
      defaultExpanded: true
      children:
      - path: 'pilot'
        name: Pilot
        widget: FormGroup
        defaultExpanded: false
        children:
        - path: 'k8s.hpaSpec'
          name: k8s.hpaSpec
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'minReplicas'
            name: k8s.hpaSpec.minReplicas
            inputInfo: inputInfo.hpaSpec.minReplicas
            value:
              type: number
          - path: 'maxReplicas'
            name: k8s.hpaSpec.maxReplicas
            inputInfo: inputInfo.hpaSpec.maxReplicas
            value:
              type: number
        - path: 'k8s.strategy.rollingUpdate'
          name: k8s.strategy.rollingUpdate
          widget: FormGroup
          defaultExpanded: false
          type: object
          properties:
            maxSurge:
              type: string
            maxUnavailable:
              type: string
          children:
          - path: 'maxSurge'
            name: k8s.strategy.rollingUpdate.maxSurge
            inputInfo: inputInfo.rollingUpdate.maxSurge
            value:
              type: string
              pattern: ^\d+%?$
          - path: 'maxUnavailable'
            name: k8s.strategy.rollingUpdate.maxUnavailable
            inputInfo: inputInfo.rollingUpdate.maxUnvailable
            value:
              type: string
              pattern: ^\d+%?$
        - path: 'k8s.resources.limits'
          name: Resource Limits
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.limits.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.limits.memory
        - path: 'k8s.resources.requests'
          name: Resource Requests
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.requests.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.requests.memory
      - path: 'ingressGateway'
        name: Ingress Gateway
        widget: FormGroup
        defaultExpanded: false
        children:
        - path: 'k8s.hpaSpec'
          name: k8s.hpaSpec
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'minReplicas'
            name: k8s.hpaSpec.minReplicas
            inputInfo: inputInfo.hpaSpec.minReplicas
            value:
              type: number
          - path: 'maxReplicas'
            name: k8s.hpaSpec.maxReplicas
            inputInfo: inputInfo.hpaSpec.maxReplicas
            value:
              type: number
        - path: 'k8s.strategy.rollingUpdate'
          name: k8s.strategy.rollingUpdate
          widget: FormGroup
          defaultExpanded: false
          type: object
          properties:
            maxSurge:
              type: string
            maxUnavailable:
              type: string
          children:
          - path: 'maxSurge'
            name: k8s.strategy.rollingUpdate.maxSurge
            inputInfo: inputInfo.rollingUpdate.maxSurge
            value:
              type: string
              pattern: ^\d+%?$
          - path: 'maxUnavailable'
            name: k8s.strategy.rollingUpdate.maxUnavailable
            inputInfo: inputInfo.rollingUpdate.maxUnvailable
            value:
              type: string
              pattern: ^\d+%?$
        - path: 'k8s.resources.limits'
          name: Resource Limits
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.limits.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.limits.memory
        - path: 'k8s.resources.requests'
          name: Resource Requests
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.requests.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.requests.memory
      - path: 'cni'
        name: CNI
        widget: FormGroup
        defaultExpanded: false
        children:
        - path: 'k8s.affinity'
          widget: CodeEditor
          inputInfo: k8s.affinity
          language: "'yaml'"
        - path: 'k8s.resources.limits'
          name: Resource Limits
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.limits.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.limits.memory
        - path: 'k8s.resources.requests'
          name: Resource Requests
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.requests.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.requests.memory
      - path: 'proxy'
        name: Proxy
        widget: FormGroup
        defaultExpanded: false
        children:
        - path: 'k8s.resources.limits'
          name: Resource Limits
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.limits.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.limits.memory
        - path: 'k8s.resources.requests'
          name: Resource Requests
          widget: FormGroup
          defaultExpanded: false
          children:
          - path: 'cpu'
            name: k8s.resources.cpu
            inputInfo: inputInfo.requests.cpu
          - path: 'memory'
            name: k8s.resources.memory
            inputInfo: inputInfo.requests.memory
  general: |-
    resource:
      kind: Istio
      group: operator.kyma-project.io
      version: v1alpha2
    urlPath: istios
    category: Kyma
    name: Istio
    scope: namespace
    features:
      actions:
        disableCreate: true
        disableDelete: true
    description: >-
      {{[Istio CR](https://github.com/kyma-project/istio/blob/main/config/samples/operator_v1alpha2_istio.yaml)}}
      describes the Istio module
  list: |-
    - name: Ready
      source: status.state
      widget: Badge
      highlights:
        positive:
          - 'Ready'
  translations: |-
    en:
      config.numTrustedProxies: Number of trusted proxies
      inputInfo.config.numTrustedProxies: Number of trusted proxies deployed in front of the Istio gateway proxy
      k8s.hpaSpec: Horizontal Pod Autoscaler
      k8s.hpaSpec.minReplicas: Minimum number of repilicas
      k8s.hpaSpec.maxReplicas: Maximum number of repilicas
      k8s.strategy.rollingUpdate: Rolling update strategy
      k8s.strategy.rollingUpdate.maxSurge: Maximum surge
      k8s.strategy.rollingUpdate.maxUnavailable: Maximum unavailable
      k8s.resources.cpu: CPU
      k8s.resources.memory: Memory
      k8s.resources.limits.cpu: CPU limits
      k8s.resources.limits.memory: Memory limits
      k8s.resources.requests.cpu: CPU requests
      k8s.resources.requests.memory: Memory requests
      k8s.affinity: Affinity (YAML)
      inputInfo.hpaSpec.minReplicas: Minimum number of replicas for this deployment
      inputInfo.hpaSpec.maxReplicas: Maximum number of replicas for this deployment
      inputInfo.rollingUpdate.maxSurge: Maximum number of Pods, or the percentage of Pods that can be created on top during an update
      inputInfo.rollingUpdate.maxUnvailable: Maximum number of Pods, or the percentage of Pods that can be unavailable during an update
      inputInfo.limits.cpu: Total CPU limits of all Pods that are in a non-terminal state must not exceed this value
      inputInfo.limits.memory: Total memory limits of all Pods that are in a non-terminal state must not exceed this value
      inputInfo.requests.cpu: Total CPU requests of all Pods that are in a non-terminal state must not exceed this value
      inputInfo.requests.memory: Total memory requests of all Pods that are in a non-terminal state must not exceed this value
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/name: istios.operator.kyma-project.io
    busola.io/extension: resource
    busola.io/extension-version: "0.5"
  name: istio-ui.operator.kyma-project.io
  namespace: kyma-system
---
apiVersion: scheduling.k8s.io/v1
description: Used for Istio components that are managed by Kyma Istio Manager and
  must run in the cluster.
globalDefault: false
kind: PriorityClass
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
  name: istio-kyma-priority
value: 2100000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: istio-operator.kyma-project.io
    app.kubernetes.io/created-by: istio
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: istio
    control-plane: controller-manager
  name: istio-controller-manager
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: istio-operator.kyma-project.io
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: istio-operator.kyma-project.io
        control-plane: controller-manager
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        command:
        - /manager
        image: europe-docker.pkg.dev/kyma-project/prod/istio-manager:1.0.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: istio-controller-manager
      terminationGracePeriodSeconds: 10
